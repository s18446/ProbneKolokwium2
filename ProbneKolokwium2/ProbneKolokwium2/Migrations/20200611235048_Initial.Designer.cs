// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProbneKolokwium2.Models;

namespace ProbneKolokwium2.Migrations
{
    [DbContext(typeof(CukierniaDbContext))]
    [Migration("20200611235048_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProbneKolokwium2.Models.Klient", b =>
                {
                    b.Property<int>("IdKlient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imie")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nazwisko")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("IdKlient");

                    b.ToTable("Klienci");
                });

            modelBuilder.Entity("ProbneKolokwium2.Models.Pracownik", b =>
                {
                    b.Property<int>("IdPracownik")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Imie")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nazwisko")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("IdPracownik");

                    b.ToTable("Pracownicy");
                });

            modelBuilder.Entity("ProbneKolokwium2.Models.WyrobCukierniczy", b =>
                {
                    b.Property<int>("IdWyrobuCukierniczego")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("CenaZaSzt")
                        .HasColumnType("real");

                    b.Property<string>("Nazwa")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Typ")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.HasKey("IdWyrobuCukierniczego");

                    b.ToTable("WyrobCukierniczy");
                });

            modelBuilder.Entity("ProbneKolokwium2.Models.Zamowienie", b =>
                {
                    b.Property<int>("IdZamowienie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataPrzyjecia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataRealizacji")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdKlient")
                        .HasColumnType("int");

                    b.Property<int>("IdPracownik")
                        .HasColumnType("int");

                    b.Property<int?>("KlientIdKlient")
                        .HasColumnType("int");

                    b.Property<int?>("PracownikIdPracownik")
                        .HasColumnType("int");

                    b.Property<string>("Uwagi")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("IdZamowienie");

                    b.HasIndex("KlientIdKlient");

                    b.HasIndex("PracownikIdPracownik");

                    b.ToTable("Zamowienie");
                });

            modelBuilder.Entity("ProbneKolokwium2.Models.ZamowienieWyrobCukierniczy", b =>
                {
                    b.Property<int>("IdWyrobCukierniczy")
                        .HasColumnType("int");

                    b.Property<int>("IdZamowienie")
                        .HasColumnType("int");

                    b.Property<int>("Ilosc")
                        .HasColumnType("int");

                    b.Property<string>("Uwagi")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int?>("WyrobCukierniczyIdWyrobuCukierniczego")
                        .HasColumnType("int");

                    b.Property<int?>("ZamowienieIdZamowienie")
                        .HasColumnType("int");

                    b.HasKey("IdWyrobCukierniczy", "IdZamowienie");

                    b.HasIndex("WyrobCukierniczyIdWyrobuCukierniczego");

                    b.HasIndex("ZamowienieIdZamowienie");

                    b.ToTable("ZamowienieWyrobCukierniczy");
                });

            modelBuilder.Entity("ProbneKolokwium2.Models.Zamowienie", b =>
                {
                    b.HasOne("ProbneKolokwium2.Models.Klient", "Klient")
                        .WithMany()
                        .HasForeignKey("KlientIdKlient");

                    b.HasOne("ProbneKolokwium2.Models.Pracownik", "Pracownik")
                        .WithMany()
                        .HasForeignKey("PracownikIdPracownik");
                });

            modelBuilder.Entity("ProbneKolokwium2.Models.ZamowienieWyrobCukierniczy", b =>
                {
                    b.HasOne("ProbneKolokwium2.Models.WyrobCukierniczy", "WyrobCukierniczy")
                        .WithMany()
                        .HasForeignKey("WyrobCukierniczyIdWyrobuCukierniczego");

                    b.HasOne("ProbneKolokwium2.Models.Zamowienie", "Zamowienie")
                        .WithMany()
                        .HasForeignKey("ZamowienieIdZamowienie");
                });
#pragma warning restore 612, 618
        }
    }
}
